type CombinationConnection {
  pageInfo: PageInfo!
  edges: [CombinationEdge]
}

type CombinationEdge {
  node: Combination
  cursor: String!
}

type Combination implements Node {
  id: ID!
  startTime: Float!
  endTime: Float!
  passes: Int!
  pending: Int!
  failures: Int!
  suites(after: String, first: Int, before: String, last: Int): SuiteConnection
  diagram: Diagram
}


input CombinationInput {
  id: FlakeID!
  jobDetails: JobInput!
  flowDetails: FlowInput!
  numberOfSuites: Int!
  startTime: Float!
  endTime: Float!
  passes: Int!
  pending: Int!
  skipped: Int!
  failures: Int!
  duration: Float!
  suites: [SuiteInput]!
  result: Result!
  diagram: DiagramInput
}
